(window.webpackJsonp=window.webpackJsonp||[]).push([[122],{812:function(n,m){n.exports='## 文件操作\n\n### head\n\n显示文件的头部内容，如果不指定参数默认显示 10 行\n\n```bash\n# 显示前 10 行内容\nhead README.md\n\n# 或者显示多个文件\nhead README.md package.json\n\n# -n 指定显示行数\nhead -n 100 README.md\n```\n\n### tail\n\n显示文件的末尾部分\n\n```bash\n# 默认显示末尾10行\ntail README.md\n\n# -n 指定显示末尾20行\ntail -n 20 README.md\n```\n\n### ls\n\n```bash\n# 显示当前目录列表\nls\n\n# 显示目录列表的详细信息\nls -l\n\n# 显示指定目录\nls ./src\n\n# 可读性地显示目录列表详细信息, h means human-readable\nls -lh\n\n# 列出所有文件包括隐藏文件\nls -a\n\n# -F 可以显示类型，用以区分是文件还是目录\nls -F # 后缀为 ”/“ 代表是目录，”*“ 为可执行文件，没有则为文件\n\n# -i 查看 inode 编号, 每一个文件或目录都有一个唯一的编号，这个数字由内核分配给文件系统中的每一个对象\nls -i\n\n# 过滤文件列表, * 代表 0 个或多个字符, ? 代表一个字符\nls READ*\n```\n\n### pwd\n\n显示当前路径\n\n```bash\n# pwd means pathname of the current working directory\npwd\n```\n\n### wc\n\n统计文件的行数、字数、字节数, 常见用于`统计代码行数`\n\n```bash\n# 统计行数\nwc -l README.md\n\n# 统计字数\nwc -w README.md\n\n# 统计字符数, 中文占两个字符, 英文占一个字符\nwc -m README.md\n```\n\n### find\n\n指定某个目录下查找文件\n\n```bash\n# 在当前目录递归搜索文件名为 README.md 文件\nfind . -name README.md\n\n# 通过通配符进行查找, 必须用引号括着, 这里查找所有后缀为 .md 文件\nfind . -name "*.md"\nfind . -iname "*.md"  # 忽略文件大小写\n\n# 排除文件，只要加 ! , 排除掉所有 .md 后缀的文件\nfind . ! -name "*.md"\n\n# 根据类型进行过滤搜索\n# f 普通文件 d 目录\nfind . -type f\n\n# 限定目录递归深度\nfind . -maxdepth 3  # 最大为3个目录\nfind . -mindepth 3  # 最小为3个目录\n\n# 查找文件大小大于 25k 文件\nfind . -size +25k\n\n# 查找 10 天前文件 -mtime 修改时间、 -ctime 创建时间、 -atime 访问时间\nfind . -mtime +10\n```\n\n### mkdir\n\n```bash\n# 在当前目录下创建 temp 目录\nmkdir temp\n\n# 创建多层目录, p means parent\nmkdir -p temp/temp2/temp3\n\n# 基于权限创建, m means mode\nmkdir -m 777 temp\n```\n\n### more\n\n* 空格 - 查看下一屏内容\n* B - 查看上一屏内容\n* 回车 - 查看下一行内容\n* Q - 退出\n\n```bash\nmore README.md\n\n# 从第10行开始显示\nmore +10 README.md\n```\n\n### paste\n\n合并 N 个文件的`列`。\n\n> 并不是纵向合并, 而是横向合并。\n\n```bash\n# 1.txt 和 2.txt 合并输出\npaste 1.txt 2.txt\n\n# 1.txt 2.txt 合并后保存为 3.txt\npaste 1.txt 2.txt > 3.txt\n```\n\n### stat\n\n用于显示文件或目录的状态信息\n\n```js\n16777220 8702541224 -rw-r--r-- 1 mac staff 0 15857 "Nov  1 13:02:02 2020" "Nov  1 13:02:02 2020" "Nov  1 13:02:02 2020" "Oct 25 18:48:15 2020" 4096 32 0 README.md\n```\n\n### grep\n\n强大的文本搜索工具, 被称为 Linux 命令三剑客。\n\n```bash\n# 从 README.md 文件中搜索 linux 关键字\ngrep "linux" README.md\ngrep "linux" README.md README2.md # 多个文件搜索\n\n# 输出时高亮显示\ngrep "linux" README.md --color\n\n# -o 只输出匹配部分\ngrep -o "linux" README.md --color\n\n# -n 输出到匹配的行数\ngrep -n "linux" README.md\n\n# -c 输出到匹配次数\ngrep -c "linux" README.md\n\n# -r 递归目录文件搜索\ngrep -r "linux" ./src\n\n# 使用 glob 风格表达式搜索\negrep "[0-9]" # 等价于 grep -E "[0-9]" README.md\n```\n\n### touch\n\n创建一个空文件, 如果文件存在只会修改文件的创建时间\n\n```bash\ntouch README.md\n```\n\n### cd\n\n进入指定目录\n\n```bash\n# 进入当前 src 目录\ncd src\n\n# 回到上一次目录\ncd -\n\n# 返回上一级目录\ncd ..\ncd ../../..   # 返回多级\n\n# 进入家目录\ncd ~\ncd # 或者不带任何参数\n\n# 将上一个命令的参数作为cd参数使用\ncd !$\n\n# 模糊匹配目录，有时目录名很长一个一个敲效率就很低\n# * 代表0个或多个字符， ? 代表一个字符\ncd READ*\n```\n\n### rm\n\n删除指定目录或文件\n\n> 使用此命令需要非常小心, 一但删除无法恢复\n\n```bash\n# 删除当前 1.txt 文件\nrm 1.txt\n\n# -i 删除前询问是否真的要删除，因为一旦删除无法恢复\nrm -i README.md\n\n# 这条命令比较常用, 强制删除目录或文件\n# -r 如果是目录递归删除, -f 强制删除 不发出任何警告\nrm -rf ./src\n```\n\n### cp\n\n拷贝文件或目录\n\n```bash\n# 将当前 README.md 文件拷贝到上一层\ncp ./README.md ../README.md\n\n# -a 将原文件属性一同拷贝, 修改时间、创建时间等\ncp -a ./README.md ../README.md\n\n# -r 用于递归拷贝目录\ncp -r home ../home\n\n# -i 如果目标文件存在会询问用户是否需要覆盖\ncp -i README.md README.md\n```\n\n* [to read](https://github.com/xjh22222228/linux-manual#cat)\n\n### link\n\n* thanks for [Read Linux](https://github.com/xjh22222228/linux-manual).'}}]);